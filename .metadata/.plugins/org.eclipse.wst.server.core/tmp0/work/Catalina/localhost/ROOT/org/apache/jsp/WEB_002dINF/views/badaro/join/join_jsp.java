/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-10-30 04:34:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.badaro.join;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/join/css2.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/join/jquery-ui.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/join/reset.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/join/style_join.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/join/jquery-ui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/join/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/join/member.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"wrap\">\r\n");
      out.write("        <div class=\"join\">\r\n");
      out.write("            <h1 class=\"logo\"><a href=\"/badaro/main/index\">바다로</a></h1>\r\n");
      out.write("            <div class=\"provision\">\r\n");
      out.write("                개인정보보호법에 따라 바다로에 회원가입 신청하시는 분께 수집하는 개인정보의 항목, 개인정보의 수집 및 이용목적, 개인정보의 보유 및 이용기간, 동의 거부권 및 동의 거부 시 불이익에 관한 사항을 안내 드리오니 자세히 읽은 후 동의하여 주시기 바랍니다.<br>\r\n");
      out.write("                <br>\r\n");
      out.write("                <span class=\"title\">1. 수집하는 개인정보</span><br>\r\n");
      out.write("                이용자는 회원가입을 하지 않아도 정보 검색, 뉴스 보기 등 대부분의 바다로 서비스를 회원과 동일하게 이용할 수 있습니다. 이용자가 메일, 캘린더, 카페, 블로그 등과 같이 개인화 혹은 회원제 서비스를 이용하기 위해 회원가입을 할 경우, 바다로는 서비스 이용을 위해 필요한 최소한의 개인정보를 수집합니다.<br>\r\n");
      out.write("                <br>\r\n");
      out.write("                회원가입 시점에 바다로가 이용자로부터 수집하는 개인정보는 아래와 같습니다.<br>\r\n");
      out.write("                - 회원 가입 시에 ‘아이디, 비밀번호, 이름, 생년월일, 성별, 휴대전화번호’를 필수항목으로 수집합니다. 만약 이용자가 입력하는 생년월일이 만14세 미만 아동일 경우에는 법정대리인 정보(법정대리인의 이름, 생년월일, 성별, 중복가입확인정보(DI), 휴대전화번호)를 추가로 수집합니다. 그리고 선택항목으로 이메일 주소, 프로필 정보를 수집합니다.<br>\r\n");
      out.write("                - 단체아이디로 회원가입 시 단체아이디, 비밀번호, 단체이름, 이메일주소, 휴대전화번호를 필수항목으로 수집합니다. 그리고 단체 대표자명을 선택항목으로 수집합니다.<br>\r\n");
      out.write("                서비스 이용 과정에서 이용자로부터 수집하는 개인정보는 아래와 같습니다.<br>\r\n");
      out.write("                바다로 내의 개별 서비스 이용, 이벤트 응모 및 경품 신청 과정에서 해당 서비스의 이용자에 한해 추가 개인정보 수집이 발생할 수 있습니다. 추가로 개인정보를 수집할 경우에는 해당 개인정보 수집 시점에서 이용자에게 ‘수집하는 개인정보 항목, 개인정보의 수집 및 이용목적, 개인정보의 보관기간’에 대해 안내 드리고 동의를 받습니다.<br>\r\n");
      out.write("                <br>\r\n");
      out.write("                서비스 이용 과정에서 IP 주소, 쿠키, 서비스 이용 기록, 기기정보, 위치정보가 생성되어 수집될 수 있습니다. 또한 이미지 및 음성을 이용한 검색 서비스 등에서 이미지나 음성이 수집될 수 있습니다.<br>\r\n");
      out.write("                구체적으로 1) 서비스 이용 과정에서 이용자에 관한 정보를 자동화된 방법으로 생성하여 이를 저장(수집)하거나,<br>\r\n");
      out.write("                2) 이용자 기기의 고유한 정보를 원래의 값을 확인하지 못 하도록 안전하게 변환하여 수집합니다. 서비스 이용 과정에서 위치정보가 수집될 수 있으며,<br>\r\n");
      out.write("                바다로에서 제공하는 위치기반 서비스에 대해서는 '바다로 위치정보 이용약관'에서 자세하게 규정하고 있습니다.<br>\r\n");
      out.write("                이와 같이 수집된 정보는 개인정보와의 연계 여부 등에 따라 개인정보에 해당할 수 있고, 개인정보에 해당하지 않을 수도 있습니다.<br>\r\n");
      out.write("                <br>\r\n");
      out.write("                <span class=\"title\">2. 수집한 개인정보의 이용</span><br>\r\n");
      out.write("                바다로 및 바다로 관련 제반 서비스(모바일 웹/앱 포함)의 회원관리, 서비스 개발・제공 및 향상, 안전한 인터넷 이용환경 구축 등 아래의 목적으로만 개인정보를 이용합니다.<br>\r\n");
      out.write("                <br>\r\n");
      out.write("                - 회원 가입 의사의 확인, 연령 확인 및 법정대리인 동의 진행, 이용자 및 법정대리인의 본인 확인, 이용자 식별, 회원탈퇴 의사의 확인 등 회원관리를 위하여 개인정보를 이용합니다.<br>\r\n");
      out.write("                - 콘텐츠 등 기존 서비스 제공(광고 포함)에 더하여, 인구통계학적 분석, 서비스 방문 및 이용기록의 분석, 개인정보 및 관심에 기반한 이용자간 관계의 형성, 지인 및 관심사 등에 기반한 맞춤형 서비스 제공 등 신규 서비스 요소의 발굴 및 기존 서비스 개선 등을 위하여 개인정보를 이용합니다.<br>\r\n");
      out.write("                - 법령 및 바다로 이용약관을 위반하는 회원에 대한 이용 제한 조치, 부정 이용 행위를 포함하여 서비스의 원활한 운영에 지장을 주는 행위에 대한 방지 및 제재, 계정도용 및 부정거래 방지, 약관 개정 등의 고지사항 전달, 분쟁조정을 위한 기록 보존, 민원처리 등 이용자 보호 및 서비스 운영을 위하여 개인정보를 이용합니다.<br>\r\n");
      out.write("                - 유료 서비스 제공에 따르는 본인인증, 구매 및 요금 결제, 상품 및 서비스의 배송을 위하여 개인정보를 이용합니다.<br>\r\n");
      out.write("                - 이벤트 정보 및 참여기회 제공, 광고성 정보 제공 등 마케팅 및 프로모션 목적으로 개인정보를 이용합니다.<br>\r\n");
      out.write("                - 서비스 이용기록과 접속 빈도 분석, 서비스 이용에 대한 통계, 서비스 분석 및 통계에 따른 맞춤 서비스 제공 및 광고 게재 등에 개인정보를 이용합니다.<br>\r\n");
      out.write("                - 보안, 프라이버시, 안전 측면에서 이용자가 안심하고 이용할 수 있는 서비스 이용환경 구축을 위해 개인정보를 이용합니다.<br>\r\n");
      out.write("                <span class=\"title\">3. 개인정보의 보관기간</span><br>\r\n");
      out.write("                회사는 원칙적으로 이용자의 개인정보를 회원 탈퇴 시 지체없이 파기하고 있습니다.<br>\r\n");
      out.write("                단, 이용자에게 개인정보 보관기간에 대해 별도의 동의를 얻은 경우, 또는 법령에서 일정 기간 정보보관 의무를 부과하는 경우에는 해당 기간 동안 개인정보를 안전하게 보관합니다.<br>\r\n");
      out.write("                <br>\r\n");
      out.write("                이용자에게 개인정보 보관기간에 대해 회원가입 시 또는 서비스 가입 시 동의를 얻은 경우는 아래와 같습니다.<br>\r\n");
      out.write("                - 부정 가입 및 이용 방지<br>\r\n");
      out.write("                부정 이용자의 가입인증 휴대전화번호 또는 DI (만14세 미만의 경우 법정대리인DI) : 탈퇴일로부터 6개월 보관<br>\r\n");
      out.write("                탈퇴한 이용자의 휴대전화번호(복호화가 불가능한 일방향 암호화(해시처리)) : 탈퇴일로부터 6개월 보관<br>\r\n");
      out.write("                - QR코드 복구 요청 대응<br>\r\n");
      out.write("                QR코드 등록 정보:삭제 시점으로부터6개월 보관<br>\r\n");
      out.write("                - 스마트플레이스 분쟁 조정 및 고객문의 대응<br>\r\n");
      out.write("                휴대전화번호:등록/수정/삭제 요청 시로부터 최대1년<br>\r\n");
      out.write("                - 바다로 플러스 멤버십 서비스 혜택 중복 제공 방지<br>\r\n");
      out.write("                암호화처리(해시처리)한DI :혜택 제공 종료일로부터6개월 보관<br>\r\n");
      out.write("                - 지식iN eXpert 재가입 신청 및 부정 이용 방지<br>\r\n");
      out.write("                ID : 서비스 탈퇴 후 6개월 보관<br>\r\n");
      out.write("                eXpert 서비스 및 eXpert 센터 가입 등록정보 : 신청일로부터 6개월(등록 거절 시, 거절 의사 표시한 날로부터 30일) 보관<br>\r\n");
      out.write("                전자상거래 등에서의 소비자 보호에 관한 법률, 전자금융거래법, 통신비밀보호법 등 법령에서 일정기간 정보의 보관을 규정하는 경우는 아래와 같습니다. 바다로는 이 기간 동안 법령의 규정에 따라 개인정보를 보관하며, 본 정보를 다른 목적으로는 절대 이용하지 않습니다.<br>\r\n");
      out.write("                - 전자상거래 등에서 소비자 보호에 관한 법률<br>\r\n");
      out.write("                계약 또는 청약철회 등에 관한 기록: 5년 보관<br>\r\n");
      out.write("                대금결제 및 재화 등의 공급에 관한 기록: 5년 보관<br>\r\n");
      out.write("                소비자의 불만 또는 분쟁처리에 관한 기록: 3년 보관<br>\r\n");
      out.write("                - 전자문서 및 전자거래 기본법<br>\r\n");
      out.write("                공인전자주소를 통한 전자문서 유통에 관한 기록 : 10년 보관<br>\r\n");
      out.write("                - 통신비밀보호법<br>\r\n");
      out.write("                로그인 기록: 3개월<br>\r\n");
      out.write("                <br>\r\n");
      out.write("                참고로 바다로는 ‘개인정보 유효기간제’에 따라 1년간 서비스를 이용하지 않은 회원의 개인정보를 별도로 분리 보관하여 관리하고 있습니다.<br>\r\n");
      out.write("                <br>\r\n");
      out.write("                <span class=\"title\">4. 개인정보 수집 및 이용 동의를 거부할 권리</span><br>\r\n");
      out.write("                이용자는 개인정보의 수집 및 이용 동의를 거부할 권리가 있습니다. 회원가입 시 수집하는 최소한의 개인정보, 즉, 필수 항목에 대한 수집 및 이용 동의를 거부하실 경우, 회원가입이 어려울 수 있습니다.<br>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"agree\">\r\n");
      out.write("                <label for=\"\"><input type=\"radio\" name=\"radio\">약관동의</label>\r\n");
      out.write("                <label for=\"\"><input type=\"radio\" name=\"radio\">약관거부</label>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <form action=\"join\" method=\"post\">\r\n");
      out.write("            \r\n");
      out.write("                <label for=\"id\">아이디</label>\r\n");
      out.write("                <input type=\"text\" id=\"id\" name=\"id\" placeholder=\"아이디를 입력하세요.\"> \r\n");
      out.write("                <div class=\"eheck_font\" id=\"id_check\"></div>          \r\n");
      out.write("             \r\n");
      out.write("                <br>\r\n");
      out.write("                \r\n");
      out.write("                <label for=\"pw\">비밀번호</label>\r\n");
      out.write("                <input type=\"password\" id=\"pw\" name=\"password\" placeholder=\"비밀번호를 입력하세요.\" >\r\n");
      out.write("                <div class=\"eheck_font\" id=\"pw_check\"></div>\r\n");
      out.write("                \r\n");
      out.write("                <br>\r\n");
      out.write("                \r\n");
      out.write("                <label for=\"pw2\">비밀번호<br>확인</label>\r\n");
      out.write("                <input type=\"password\" id=\"pw2\" name=\"pw2\" placeholder=\"비밀번호를 재확인하세요.\">\r\n");
      out.write("				<div class=\"eheck_font\" id=\"pw2_check\"></div>\r\n");
      out.write("\r\n");
      out.write("                <br>\r\n");
      out.write("                \r\n");
      out.write("                <label for=\"name\">성명</label>\r\n");
      out.write("                <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"성명을 입력하세요.\">\r\n");
      out.write("                <div class=\"eheck_font\" id=\"name_check\"></div>\r\n");
      out.write("                <br>\r\n");
      out.write("                \r\n");
      out.write("                <label for=\"birth\">생년월일</label>\r\n");
      out.write("                <input type=\"text\" id=\"birth\" name=\"birth\" placeholder=\"생년월일 8자\">\r\n");
      out.write("                <div class=\"eheck_font\" id=\"birth_check\"></div>\r\n");
      out.write("                \r\n");
      out.write("                <br>\r\n");
      out.write("                \r\n");
      out.write("                <label for=\"phone\">전화번호</label>\r\n");
      out.write("                <input type=\"tel\" id=\"phone\" name=\"phone\" placeholder=\"'-' 를 빼고 입력하세요.\">\r\n");
      out.write("                <div class=\"eheck_font\" id=\"phone_check\"></div>\r\n");
      out.write("                \r\n");
      out.write("                <br>\r\n");
      out.write("                \r\n");
      out.write("                <button class=\"joinBtn\" type=\"submit\">회원가입</button>\r\n");
      out.write("                <button type=\"reset\" class=\"resetBtn\">취소</button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
