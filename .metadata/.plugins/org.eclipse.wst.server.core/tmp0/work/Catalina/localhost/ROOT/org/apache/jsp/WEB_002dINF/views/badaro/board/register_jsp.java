/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-11-03 06:32:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.badaro.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/write/style.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	 <div id=\"wrap\">\r\n");
      out.write("        <header>\r\n");
      out.write("            <div class=\"logo\">\r\n");
      out.write("                <a href=\"/badaro/main/index\">바다로</a>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("         	<form action=\"register\" method=\"post\">\r\n");
      out.write("	            <div class=\"publication\">\r\n");
      out.write("	                <button type=\"submit\">발행</button>\r\n");
      out.write("	            </div>\r\n");
      out.write("        </header>\r\n");
      out.write("        <div id=\"container\">\r\n");
      out.write("            <div class=\"con_in\">\r\n");
      out.write("                <div class=\"top\">\r\n");
      out.write("                    <div class=\"top_info\">\r\n");
      out.write("                    	<div>\r\n");
      out.write("                    	\r\n");
      out.write("                    		<label>지역</label>\r\n");
      out.write("							 <select class=\"category1\">\r\n");
      out.write("							  <option value=\"\">전체</option>\r\n");
      out.write("							 </select>\r\n");
      out.write("							 \r\n");
      out.write("							 <label>해수욕장</label>\r\n");
      out.write("							 <select class=\"category2\" name=\"p_beach\">\r\n");
      out.write("							  <option value=\"\">전체</option>\r\n");
      out.write("							 </select>\r\n");
      out.write("                    	</div>\r\n");
      out.write("\r\n");
      out.write("							 \r\n");
      out.write("                        <div class=\"star\">\r\n");
      out.write("                            <span>별점</span>\r\n");
      out.write("                            <div class=\"star-rating\" name = \"p_rating\">\r\n");
      out.write("                                <input type=\"radio\" id=\"5stars\" name=\"rating\" value=\"5\" v-model=\"ratings\" />\r\n");
      out.write("                                <label for=\"5stars\" class=\"star pr-4\">★</label>\r\n");
      out.write("                                <input type=\"radio\" id=\"4stars\" name=\"rating\" value=\"4\" v-model=\"ratings\" />\r\n");
      out.write("                                <label for=\"4stars\" class=\"star\">★</label>\r\n");
      out.write("                                <input type=\"radio\" id=\"3stars\" name=\"rating\" value=\"3\" v-model=\"ratings\" />\r\n");
      out.write("                                <label for=\"3stars\" class=\"star\">★</label>\r\n");
      out.write("                                <input type=\"radio\" id=\"2stars\" name=\"rating\" value=\"2\" v-model=\"ratings\" />\r\n");
      out.write("                                <label for=\"2stars\" class=\"star\">★</label>\r\n");
      out.write("                                <input type=\"radio\" id=\"1stars\" name=\"rating\" value=\"1\" v-model=\"ratings\" />\r\n");
      out.write("                                <label for=\"1stars\" class=\"star\">★</label>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-group\">\r\n");
      out.write("							   <label for=\"p_user\">작성자</label>\r\n");
      out.write("							   <input class=\"form-control\" id=\"p_user\" name=\"p_user\">\r\n");
      out.write("						</div>                       \r\n");
      out.write("                    </div>    \r\n");
      out.write("                    \r\n");
      out.write("	                <div class=\"top_title\">\r\n");
      out.write("	                    <p><textarea style=\"resize: none;\" name=\"p_title\" id=\"p_title\" placeholder=\"제목\"></textarea></p>\r\n");
      out.write("	                </div>\r\n");
      out.write("                </div> <!--.top-->\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"write\">\r\n");
      out.write("                    <button>본문 이미지 첨부</button>\r\n");
      out.write("                    <p><textarea style=\"resize: none;\" name=\"p_content\" id=\"p_content\" placeholder=\"내용\"></textarea></p>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("   	<script type=\"text/javascript\" src=\"/resources/js/write/jquery.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("		 // 컨트롤러에서 데이터 받기\r\n");
      out.write("		    var jsonData = JSON.parse('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${category}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\r\n");
      out.write("		    console.log(jsonData);\r\n");
      out.write("		\r\n");
      out.write("		    var cate1Arr = new Array();\r\n");
      out.write("		    var cate1Obj = new Object();\r\n");
      out.write("		\r\n");
      out.write("		    // 1차 분류 셀렉트 박스에 삽입할 데이터 준비\r\n");
      out.write("		    for(var i = 0; i < jsonData.length; i++) {\r\n");
      out.write("		     \r\n");
      out.write("		     if(jsonData[i].tier == \"1\") {\r\n");
      out.write("		      cate1Obj = new Object();  //초기화\r\n");
      out.write("		      cate1Obj.cateCode = jsonData[i].cateCode;\r\n");
      out.write("		      cate1Obj.cateName = jsonData[i].cateName;\r\n");
      out.write("		      cate1Arr.push(cate1Obj);\r\n");
      out.write("		     }\r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		    // 1차 분류 셀렉트 박스에 데이터 삽입\r\n");
      out.write("		    var cate1Select = $(\"select.category1\")\r\n");
      out.write("		\r\n");
      out.write("		    for(var i = 0; i < cate1Arr.length; i++) {\r\n");
      out.write("		     cate1Select.append(\"<option value='\" + cate1Arr[i].cateCode + \"'>\"\r\n");
      out.write("		          + cate1Arr[i].cateName + \"</option>\"); \r\n");
      out.write("		    }\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		    $(document).on(\"change\", \"select.category1\", function(){\r\n");
      out.write("		\r\n");
      out.write("		    	 var cate2Arr = new Array();\r\n");
      out.write("		    	 var cate2Obj = new Object();\r\n");
      out.write("		    	 \r\n");
      out.write("		    	 // 2차 분류 셀렉트 박스에 삽입할 데이터 준비\r\n");
      out.write("		    	 for(var i = 0; i < jsonData.length; i++) {\r\n");
      out.write("		    	  \r\n");
      out.write("		    	  if(jsonData[i].tier == \"2\") {\r\n");
      out.write("		    	   cate2Obj = new Object();  //초기화\r\n");
      out.write("		    	   cate2Obj.cateCode = jsonData[i].cateCode;\r\n");
      out.write("		    	   cate2Obj.cateName = jsonData[i].cateName;\r\n");
      out.write("		    	   cate2Obj.cateCodeRef = jsonData[i].cateCodeRef;\r\n");
      out.write("		    	   \r\n");
      out.write("		    	   cate2Arr.push(cate2Obj);\r\n");
      out.write("		    	  }\r\n");
      out.write("		    	 }\r\n");
      out.write("		    	 \r\n");
      out.write("		    	 var cate2Select = $(\"select.category2\");\r\n");
      out.write("		    	 \r\n");
      out.write("		    	 /*\r\n");
      out.write("		    	 for(var i = 0; i < cate2Arr.length; i++) {\r\n");
      out.write("		    	   cate2Select.append(\"<option value='\" + cate2Arr[i].cateCode + \"'>\"\r\n");
      out.write("		    	        + cate2Arr[i].cateName + \"</option>\");\r\n");
      out.write("		    	 }\r\n");
      out.write("		    	 */\r\n");
      out.write("		    	 \r\n");
      out.write("		    	 cate2Select.children().remove();\r\n");
      out.write("		\r\n");
      out.write("		    	 $(\"option:selected\", this).each(function(){\r\n");
      out.write("		    	  \r\n");
      out.write("		    	  var selectVal = $(this).val();  \r\n");
      out.write("		    	  cate2Select.append(\"<option value=''>전체</option>\");\r\n");
      out.write("		    	  \r\n");
      out.write("		    	  for(var i = 0; i < cate2Arr.length; i++) {\r\n");
      out.write("		    	   if(selectVal == cate2Arr[i].cateCodeRef) {\r\n");
      out.write("		    	    cate2Select.append(\"<option value='\" + cate2Arr[i].cateCode + \"'>\"\r\n");
      out.write("		    	         + cate2Arr[i].cateName + \"</option>\");\r\n");
      out.write("		    	   }\r\n");
      out.write("		    	  }\r\n");
      out.write("		    	  \r\n");
      out.write("		    	 });\r\n");
      out.write("		    	 \r\n");
      out.write("		    	});\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
